from aiogram import Router, Bot
from aiogram.types import Message, LabeledPrice
from aiogram.filters import Command, CommandObject, CommandStart
from aiogram.fsm.context import FSMContext

from os import _exit as exit
import asyncio
from logging import error
from asyncio import sleep

from config_reader import config
from database.queries import check_profile, check_profile, check_casino_balance
from database.core import db
from states.enums import UserStatus
from keyboards.reply import register, main

router = Router()

# –ö–æ–º–º–µ–Ω—Ç

@router.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id

    status = await check_profile(user_id)

    if status == UserStatus.NOT_FOUND:
        keyboard = register
    else:
        keyboard = main

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>!\n–¢—ã –ø–æ–ø–∞–ª –≤ –±–æ—Ç <b>ST Bank</b> ({config.version[0]})\n\n–ó–¥–µ—Å—å —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –∞–∫—Ü–∏—è–º–∏, –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±–æ–∫—Å—ã, —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å <s>—É–±—ã—Ç–∫–∏</s> –ø—Ä–∏–±—ã–ª—å", reply_markup = keyboard)

@router.message(Command("check"))
async def check(message: Message):
    status = await check_profile(message.from_user.id)
    await message.answer(status)

@router.message(Command("game"))
async def handler_game(message: Message): 
    user_id = message.from_user.id

    msg = await message.answer_dice(emoji="üé∞")
    value = msg.dice.value
    balance = await check_casino_balance(user_id)

    balance_now = balance['casino_pts'] + value - 30
    await db.update_data("users", {"casino_pts": balance_now}, {"id": user_id})

    res_msg = await msg.reply(f"‚è≥ <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...</b>")
    await sleep(3)

    await res_msg.edit_text(f"<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {value}</b>\n\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance_now}")

@router.message(Command("shut"))
async def shutdown_handler(message: Message):
    if message.from_user.id != config.admin_id:
        pass

    await message.answer("–ë–æ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")

    asyncio.create_task(shutdown())

async def shutdown():    
    error("Bot shutdowned by command")
    exit(0)